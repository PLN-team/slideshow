## Predict newly observed data

<div class="footer">$\texttt{pip install pyPLNmodels}$</div>

The $\texttt{PlnLDA}$ allows to predict newly observed data. It performs LDA on the latent space.


## Predict newly observed data


<div class="footer">$\texttt{pip install pyPLNmodels}$</div>

::: {.panel-tabset}

### Training
```{python}
#| code-line-numbers: "1-4|5-6"
#| echo: true
from pyPLNmodels import PlnLDA, plot_confusion_matrix
ntrain = 500
endog_train, endog_test = rna["endog"][:ntrain],rna["endog"][ntrain:]
labels_train, labels_test = rna["labels"][:ntrain], rna["labels"][ntrain:]
lda = PlnLDA(endog_train, clusters = labels_train).fit()
pred_test = lda.predict_clusters(endog_test)
```

```{python}
del(lda)
```

### Confusion matrix

```{python}
# | echo: true
plot_confusion_matrix(pred_test, labels_test)
```

:::

---

<div class="footer">$\texttt{pip install pyPLNmodels}$</div>

::: {.panel-tabset}

### Zero-inflation investigation

```{python}
# | echo: true
import seaborn as sns
from pyPLNmodels import ZIPln
zi = ZIPln(rna["endog"], exog = rna["labels_1hot"], add_const = False).fit()
```

### Output


```{python}
fig, ax = plt.subplots(figsize = (12,8))
_  = sns.heatmap(zi.latent_prob, ax = ax)
plt.show()
```

```{python}
del(zi)
```

:::

---
